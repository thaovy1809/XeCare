"use client"

import { useState, useEffect } from "react"
import { DashboardLayout } from "@/components/dashboard-layout"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Input } from "@/components/ui/input"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import {
  Phone,
  MapPin,
  Clock,
  AlertTriangle,
  Car,
  Bike,
  Truck,
  Navigation,
  Zap,
  Wrench,
  Shield,
  Star,
  CheckCircle,
} from "lucide-react"
import Link from "next/link"

const emergencyServices = [
  {
    id: "breakdown",
    name: "Xe ch·∫øt m√°y",
    icon: "‚ö°",
    description: "Xe kh√¥ng n·ªï m√°y, h·∫øt ƒëi·ªán, l·ªói h·ªá th·ªëng",
    solutions: ["N·ªï m√°y b·∫±ng d√¢y", "Thay ·∫Øc quy", "S·ª≠a ch·ªØa t·∫°i ch·ªó", "K√©o v·ªÅ garage"],
    avgTime: "15-30 ph√∫t",
    price: "150,000 - 500,000",
  },
  {
    id: "flat-tire",
    name: "Th·ªßng l·ªëp",
    icon: "üõû",
    description: "L·ªëp xe b·ªã th·ªßng, n·ªï l·ªëp tr√™n ƒë∆∞·ªùng",
    solutions: ["V√° l·ªëp t·∫°i ch·ªó", "Thay l·ªëp d·ª± ph√≤ng", "B∆°m l·ªëp kh·∫©n c·∫•p", "K√©o ƒë·∫øn ti·ªám l·ªëp"],
    avgTime: "20-45 ph√∫t",
    price: "100,000 - 300,000",
  },
  {
    id: "accident",
    name: "Tai n·∫°n giao th√¥ng",
    icon: "üí•",
    description: "Xe b·ªã h∆∞ h·ªèng do tai n·∫°n",
    solutions: ["ƒê√°nh gi√° t√¨nh tr·∫°ng", "S∆° c·ª©u", "K√©o xe", "H·ªó tr·ª£ b·∫£o hi·ªÉm"],
    avgTime: "30-60 ph√∫t",
    price: "200,000 - 1,000,000",
  },
  {
    id: "out-of-fuel",
    name: "H·∫øt xƒÉng",
    icon: "‚õΩ",
    description: "Xe h·∫øt nhi√™n li·ªáu gi·ªØa ƒë∆∞·ªùng",
    solutions: ["C·∫•p xƒÉng kh·∫©n c·∫•p", "D·∫´n ƒë·∫øn tr·∫°m xƒÉng", "Ki·ªÉm tra h·ªá th·ªëng nhi√™n li·ªáu"],
    avgTime: "15-25 ph√∫t",
    price: "100,000 - 200,000",
  },
  {
    id: "overheating",
    name: "Qu√° nhi·ªát",
    icon: "üå°Ô∏è",
    description: "ƒê·ªông c∆° qu√° n√≥ng, thi·∫øu n∆∞·ªõc l√†m m√°t",
    solutions: ["Th√™m n∆∞·ªõc l√†m m√°t", "Ki·ªÉm tra k√©t n∆∞·ªõc", "S·ª≠a ch·ªØa t·∫°m th·ªùi", "K√©o v·ªÅ garage"],
    avgTime: "20-40 ph√∫t",
    price: "150,000 - 400,000",
  },
  {
    id: "locked-out",
    name: "Kh√≥a trong xe",
    icon: "üîê",
    description: "Ch√¨a kh√≥a b·ªã kh√≥a trong xe",
    solutions: ["M·ªü kh√≥a chuy√™n nghi·ªáp", "L√†m ch√¨a kh√≥a m·ªõi", "H·ªó tr·ª£ v√†o xe"],
    avgTime: "10-30 ph√∫t",
    price: "200,000 - 500,000",
  },
]

const rescueTeams = [
  {
    id: 1,
    name: "C·ª©u h·ªô 24/7 Express",
    phone: "1900 1234",
    rating: 4.9,
    responseTime: "15-20 ph√∫t",
    coverage: "To√†n TP.HCM",
    services: ["K√©o xe", "S·ª≠a l·ªëp", "N·ªï m√°y", "C·∫•p c·ª©u"],
    available: true,
    vehicles: ["Xe m√°y", "√î t√¥", "Xe t·∫£i"],
    price: "T·ª´ 150,000 VNƒê",
  },
  {
    id: 2,
    name: "SOS Auto Rescue",
    phone: "1900 5678",
    rating: 4.7,
    responseTime: "20-30 ph√∫t",
    coverage: "TP.HCM & B√¨nh D∆∞∆°ng",
    services: ["K√©o xe", "S·ª≠a ch·ªØa t·∫°i ch·ªó", "C·∫•p c·ª©u"],
    available: true,
    vehicles: ["√î t√¥", "Xe t·∫£i"],
    price: "T·ª´ 200,000 VNƒê",
  },
  {
    id: 3,
    name: "Fast Rescue Team",
    phone: "1900 9999",
    rating: 4.8,
    responseTime: "10-25 ph√∫t",
    coverage: "N·ªôi th√†nh TP.HCM",
    services: ["K√©o xe", "Thay l·ªëp", "N·ªï m√°y", "C·∫•p xƒÉng"],
    available: false,
    vehicles: ["Xe m√°y", "√î t√¥"],
    price: "T·ª´ 120,000 VNƒê",
  },
]

export default function EmergencyRescuePage() {
  const [selectedProblem, setSelectedProblem] = useState("")
  const [location, setLocation] = useState("")
  const [vehicleType, setVehicleType] = useState("")
  const [userLocation, setUserLocation] = useState<{ lat: number; lng: number } | null>(null)

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setUserLocation({
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          })
          setLocation("V·ªã tr√≠ hi·ªán t·∫°i")
        },
        (error) => console.log("Error getting location:", error),
      )
    }
  }, [])

  const selectedService = emergencyServices.find((s) => s.id === selectedProblem)

  return (
    <DashboardLayout
      allowedRoles={["user", "admin", "garage"]}
      title="C·ª©u h·ªô xe kh·∫©n c·∫•p 24/7"
      description="H·ªó tr·ª£ c·ª©u h·ªô nhanh ch√≥ng khi xe g·∫∑p s·ª± c·ªë b·∫•t ng·ªù"
    >
      <div className="space-y-8">
        {/* Emergency Header */}
        <Card className="border-red-100 bg-gradient-to-r from-red-50 to-orange-50">
          <CardContent className="p-8">
            <div className="grid lg:grid-cols-2 gap-8 items-center">
              <div className="space-y-4">
                <div className="flex items-center space-x-3">
                  <div className="w-16 h-16 bg-gradient-to-r from-red-600 to-orange-600 rounded-2xl flex items-center justify-center">
                    <Wrench className="h-8 w-8 text-white" />
                  </div>
                  <div>
                    <h1 className="text-2xl font-bold text-slate-900">C·ª©u h·ªô xe 24/7</h1>
                    <p className="text-red-600 font-medium">H·ªó tr·ª£ kh·∫©n c·∫•p m·ªçi l√∫c, m·ªçi n∆°i</p>
                  </div>
                </div>

                <p className="text-slate-600 leading-relaxed">
                  D·ªãch v·ª• c·ª©u h·ªô xe chuy√™n nghi·ªáp v·ªõi th·ªùi gian ph·∫£n h·ªìi nhanh nh·∫•t. ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n gi√†u kinh
                  nghi·ªám, trang b·ªã ƒë·∫ßy ƒë·ªß ƒë·ªÉ x·ª≠ l√Ω m·ªçi t√¨nh hu·ªëng.
                </p>

                <div className="grid grid-cols-3 gap-4 text-center">
                  <div>
                    <div className="text-2xl font-bold text-red-600">24/7</div>
                    <div className="text-sm text-slate-600">Ho·∫°t ƒë·ªông</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-green-600">15</div>
                    <div className="text-sm text-slate-600">Ph√∫t ƒë·∫øn</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-purple-600">50+</div>
                    <div className="text-sm text-slate-600">ƒê·ªôi c·ª©u h·ªô</div>
                  </div>
                </div>
              </div>

              <div className="space-y-4">
                <Alert className="border-red-200 bg-red-50">
                  <AlertTriangle className="h-4 w-4 text-red-600" />
                  <AlertDescription className="text-red-700">
                    <strong>Kh·∫©n c·∫•p?</strong> G·ªçi ngay hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh nh·∫•t!
                  </AlertDescription>
                </Alert>

                <Button
                  size="lg"
                  className="w-full bg-gradient-to-r from-red-600 to-orange-600 text-lg py-6"
                  onClick={() => window.open("tel:1900123456")}
                >
                  <Phone className="h-6 w-6 mr-3" />
                  G·ªçi c·ª©u h·ªô: 1900 123 456
                </Button>

                <div className="flex space-x-4">
                  <Button variant="outline" className="flex-1 border-red-200 text-red-600" asChild>
                    <Link href="#request-form">Y√™u c·∫ßu c·ª©u h·ªô</Link>
                  </Button>
                  <Button variant="outline" className="flex-1 border-red-200 text-red-600" asChild>
                    <Link href="/tracking">Theo d√µi c·ª©u h·ªô</Link>
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Emergency Types */}
        <div className="space-y-6">
          <h2 className="text-xl font-bold text-slate-900">C√°c t√¨nh hu·ªëng c·ª©u h·ªô</h2>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {emergencyServices.map((service) => (
              <Card
                key={service.id}
                className={`border-red-100 cursor-pointer transition-all hover:shadow-lg ${
                  selectedProblem === service.id ? "ring-2 ring-red-200 bg-red-50" : ""
                }`}
                onClick={() => setSelectedProblem(service.id)}
              >
                <CardContent className="p-6">
                  <div className="text-center space-y-3">
                    <div className="text-4xl">{service.icon}</div>
                    <h3 className="font-semibold text-lg">{service.name}</h3>
                    <p className="text-sm text-slate-600">{service.description}</p>

                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-slate-500">Th·ªùi gian:</span>
                        <span className="font-medium">{service.avgTime}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-slate-500">Chi ph√≠:</span>
                        <span className="font-medium text-red-600">{service.price}</span>
                      </div>
                    </div>

                    {selectedProblem === service.id && (
                      <div className="mt-4 p-3 bg-white rounded border">
                        <h4 className="font-medium text-sm mb-2">Gi·∫£i ph√°p:</h4>
                        <ul className="space-y-1">
                          {service.solutions.map((solution, index) => (
                            <li key={index} className="flex items-center space-x-2 text-xs">
                              <CheckCircle className="h-3 w-3 text-green-600" />
                              <span>{solution}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Request Form */}
        <div id="request-form" className="space-y-6">
          <h2 className="text-xl font-bold text-slate-900">Y√™u c·∫ßu c·ª©u h·ªô</h2>

          <Card className="border-red-100">
            <CardContent className="p-6">
              <div className="grid md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium">V·ªã tr√≠ hi·ªán t·∫°i</label>
                    <div className="flex space-x-2">
                      <Input
                        placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ chi ti·∫øt..."
                        value={location}
                        onChange={(e) => setLocation(e.target.value)}
                        className="flex-1"
                      />
                      <Button
                        variant="outline"
                        onClick={() => {
                          if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition((position) => {
                              setUserLocation({
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                              })
                              setLocation("V·ªã tr√≠ hi·ªán t·∫°i")
                            })
                          }
                        }}
                      >
                        <Navigation className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium">Lo·∫°i xe</label>
                    <Select value={vehicleType} onValueChange={setVehicleType}>
                      <SelectTrigger>
                        <SelectValue placeholder="Ch·ªçn lo·∫°i xe" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="xe-may">
                          <div className="flex items-center space-x-2">
                            <Bike className="h-4 w-4" />
                            <span>Xe m√°y</span>
                          </div>
                        </SelectItem>
                        <SelectItem value="o-to">
                          <div className="flex items-center space-x-2">
                            <Car className="h-4 w-4" />
                            <span>√î t√¥</span>
                          </div>
                        </SelectItem>
                        <SelectItem value="xe-tai">
                          <div className="flex items-center space-x-2">
                            <Truck className="h-4 w-4" />
                            <span>Xe t·∫£i</span>
                          </div>
                        </SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium">V·∫•n ƒë·ªÅ g·∫∑p ph·∫£i</label>
                    <Select value={selectedProblem} onValueChange={setSelectedProblem}>
                      <SelectTrigger>
                        <SelectValue placeholder="Ch·ªçn v·∫•n ƒë·ªÅ" />
                      </SelectTrigger>
                      <SelectContent>
                        {emergencyServices.map((service) => (
                          <SelectItem key={service.id} value={service.id}>
                            <span>
                              {service.icon} {service.name}
                            </span>
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-4">
                  {selectedService && (
                    <div className="p-4 bg-red-50 rounded-lg border border-red-200">
                      <h4 className="font-medium text-red-800 mb-2">Th√¥ng tin d·ªãch v·ª•</h4>
                      <div className="space-y-2 text-sm">
                        <div className="flex justify-between">
                          <span>Th·ªùi gian d·ª± ki·∫øn:</span>
                          <span className="font-medium">{selectedService.avgTime}</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Chi ph√≠ ∆∞·ªõc t√≠nh:</span>
                          <span className="font-medium">{selectedService.price}</span>
                        </div>
                      </div>
                      <div className="mt-3">
                        <h5 className="font-medium text-xs mb-1">Gi·∫£i ph√°p c√≥ th·ªÉ:</h5>
                        <ul className="space-y-1">
                          {selectedService.solutions.slice(0, 2).map((solution, index) => (
                            <li key={index} className="text-xs text-red-700">
                              ‚Ä¢ {solution}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  )}

                  <Button
                    className="w-full bg-gradient-to-r from-red-600 to-orange-600"
                    disabled={!location || !vehicleType || !selectedProblem}
                    asChild
                  >
                    <Link href={`/emergency?problem=${selectedProblem}&location=${location}&vehicle=${vehicleType}`}>
                      <Zap className="h-4 w-4 mr-2" />
                      G·ª≠i y√™u c·∫ßu c·ª©u h·ªô
                    </Link>
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Rescue Teams */}
        <div className="space-y-6">
          <h2 className="text-xl font-bold text-slate-900">ƒê·ªôi c·ª©u h·ªô g·∫ßn b·∫°n</h2>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {rescueTeams.map((team) => (
              <Card key={team.id} className="border-red-100">
                <CardHeader>
                  <div className="flex justify-between items-start">
                    <div>
                      <CardTitle className="text-lg">{team.name}</CardTitle>
                      <div className="flex items-center space-x-1 text-sm">
                        <Star className="h-4 w-4 text-yellow-400 fill-current" />
                        <span>{team.rating}</span>
                        <span className="text-slate-500">‚Ä¢ {team.responseTime}</span>
                      </div>
                    </div>
                    <Badge variant={team.available ? "default" : "secondary"}>
                      {team.available ? "S·∫µn s√†ng" : "B·∫≠n"}
                    </Badge>
                  </div>
                </CardHeader>

                <CardContent className="space-y-4">
                  <div className="space-y-2 text-sm">
                    <div className="flex items-center space-x-2">
                      <MapPin className="h-3 w-3 text-slate-400" />
                      <span>{team.coverage}</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <Phone className="h-3 w-3 text-slate-400" />
                      <span>{team.phone}</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <Clock className="h-3 w-3 text-slate-400" />
                      <span className="font-medium text-red-600">{team.price}</span>
                    </div>
                  </div>

                  <div className="flex flex-wrap gap-1">
                    {team.services.map((service, index) => (
                      <Badge key={index} variant="outline" className="text-xs">
                        {service}
                      </Badge>
                    ))}
                  </div>

                  <div className="flex flex-wrap gap-1">
                    {team.vehicles.map((vehicle, index) => (
                      <Badge key={index} variant="secondary" className="text-xs">
                        {vehicle}
                      </Badge>
                    ))}
                  </div>

                  <div className="flex space-x-2">
                    <Button
                      size="sm"
                      variant="outline"
                      className="flex-1"
                      onClick={() => window.open(`tel:${team.phone}`)}
                      disabled={!team.available}
                    >
                      <Phone className="h-4 w-4 mr-1" />
                      G·ªçi ngay
                    </Button>
                    <Button
                      size="sm"
                      className="flex-1 bg-gradient-to-r from-red-600 to-orange-600"
                      disabled={!team.available || !location || !vehicleType || !selectedProblem}
                    >
                      Y√™u c·∫ßu
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Safety Tips */}
        <div className="space-y-6">
          <h2 className="text-xl font-bold text-slate-900">M·∫πo an to√†n khi ch·ªù c·ª©u h·ªô</h2>

          <div className="grid md:grid-cols-2 gap-6">
            <Card className="border-green-100">
              <CardHeader>
                <CardTitle className="text-lg text-green-700 flex items-center space-x-2">
                  <Shield className="h-5 w-5" />
                  <span>An to√†n c√° nh√¢n</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {[
                    "ƒê·ªó xe ·ªü v·ªã tr√≠ an to√†n, tr√°nh xa ƒë∆∞·ªùng",
                    "B·∫≠t ƒë√®n c·∫£nh b√°o v√† ƒë·∫∑t bi·ªÉn b√°o",
                    "ƒê·ª©ng ·ªü n∆°i an to√†n, tr√°nh xa xe",
                    "M·∫∑c √°o ph·∫£n quang n·∫øu c√≥",
                    "Gi·ªØ li√™n l·∫°c v·ªõi ƒë·ªôi c·ª©u h·ªô",
                  ].map((tip, index) => (
                    <li key={index} className="flex items-center space-x-2 text-sm">
                      <CheckCircle className="h-4 w-4 text-green-600" />
                      <span>{tip}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>

            <Card className="border-blue-100">
              <CardHeader>
                <CardTitle className="text-lg text-blue-700 flex items-center space-x-2">
                  <Phone className="h-5 w-5" />
                  <span>Th√¥ng tin c·∫ßn chu·∫©n b·ªã</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {[
                    "V·ªã tr√≠ ch√≠nh x√°c (ƒë·ªãa ch·ªâ, c·ªôt km)",
                    "Lo·∫°i xe v√† bi·ªÉn s·ªë",
                    "M√¥ t·∫£ v·∫•n ƒë·ªÅ g·∫∑p ph·∫£i",
                    "S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá",
                    "Gi·∫•y t·ªù xe v√† b·∫£o hi·ªÉm",
                  ].map((tip, index) => (
                    <li key={index} className="flex items-center space-x-2 text-sm">
                      <CheckCircle className="h-4 w-4 text-blue-600" />
                      <span>{tip}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Emergency Contacts */}
        <Card className="border-red-100 bg-gradient-to-r from-red-600 to-orange-600 text-white">
          <CardContent className="p-8 text-center">
            <h3 className="text-2xl font-bold mb-4">Hotline c·ª©u h·ªô 24/7</h3>
            <div className="grid md:grid-cols-3 gap-6 mb-6">
              <div>
                <div className="text-3xl font-bold">1900 1234</div>
                <div className="text-red-100">C·ª©u h·ªô t·ªïng ƒë√†i</div>
              </div>
              <div>
                <div className="text-3xl font-bold">113</div>
                <div className="text-red-100">C·∫£nh s√°t giao th√¥ng</div>
              </div>
              <div>
                <div className="text-3xl font-bold">115</div>
                <div className="text-red-100">C·∫•p c·ª©u y t·∫ø</div>
              </div>
            </div>
            <p className="text-red-100 mb-6">Trong tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p, h√£y g·ªçi ngay ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh nh·∫•t</p>
            <Button size="lg" className="bg-white text-red-600 hover:bg-red-50">
              <Phone className="h-5 w-5 mr-2" />
              G·ªçi c·ª©u h·ªô ngay
            </Button>
          </CardContent>
        </Card>
      </div>
    </DashboardLayout>
  )
}
